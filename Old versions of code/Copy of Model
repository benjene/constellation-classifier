{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Model","provenance":[{"file_id":"1JG84W-O8kWwO2Hqnlv_7DNRKyWkVjxNU","timestamp":1636146825531}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"5GEON873q4eA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1636146675241,"user_tz":240,"elapsed":133,"user":{"displayName":"Nicholas Foisy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00047853568347922974"}},"outputId":"71699a44-2734-4a0c-b8c9-198661412ac3"},"source":["#following https://www.analyticsvidhya.com/blog/2021/08/image-classification-using-cnn-understanding-computer-vision/\n","\n","import numpy as np \n","import pandas as pd  \n","import os \n","from pathlib import Path \n","import glob\n","\n","import seaborn as sns \n","import matplotlib.pyplot as plt \n","\n","import tensorflow as tf  \n","from tensorflow.keras import layers\n","from tensorflow.keras import Model  \n","from tensorflow.keras.optimizers import RMSprop\n","from keras_preprocessing.image import ImageDataGenerator\n","\n","\n","from tensorflow.keras.optimizers import Adam\n","from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n","\n","from google.colab import drive\n","\n","drive.mount('/content/gdrive')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/gdrive; to attempt to forcibly remount, call drive.mount(\"/content/gdrive\", force_remount=True).\n"]}]},{"cell_type":"code","metadata":{"id":"LVVzJ-TbCbTM"},"source":["# input_list = [\"Aquarius\", \"Aries\", \"Cancer\", \"Cassiopeia\", \"Cygnus\", \"Pisces\", \"Scorpius\", \"Taurus\", \"Ursa_Minor\"]\n","\n","input_list = [\"Aquarius\", \"Aries\", \"Cancer\", \"Cassiopeia\", \"Scorpius\"]\n","\n","input_num = [i for i in range(len(input_list))]\n","\n","#this is where the data for the model will be selected\n","train_folder_path = Path('/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/Train')\n","test_path = Path('/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/Test') #not used at the current moment"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":336},"id":"ktzkzEvwH39k","cellView":"form","executionInfo":{"status":"ok","timestamp":1636143598018,"user_tz":240,"elapsed":2240,"user":{"displayName":"Fardin Abdullah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghj31m9krKn8PVDkg5c0gzfqdB70S0scmgnUcDpGA=s64","userId":"01072415077626113729"}},"outputId":"202cebf8-3a38-427e-d5f2-abfd8b8866fd"},"source":["#@title Data Visualization\n","#image visualization showing distribution of dataset\n","\n","#We can use a loop for these\n","\n","aqu_path = Path('/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/Train/Aquarius')\n","ari_path = Path('/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/Train/Aries')\n","can_path = Path('/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/Train/Cancer')\n","cas_path = Path('/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/Train/Cassiopeia')\n","cyg_path = Path('/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/NotConsidered/Cygnus')\n","pis_path = Path('/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/NotConsidered/Pisces')\n","sco_path = Path('/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/Train/Scorpius')\n","tau_path = Path('/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/NotConsidered/Taurus')\n","umi_path = Path('/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/NotConsidered/Ursa_Minor')\n","\n","\n","\n","aqu_images = aqu_path.glob('*.jpg')\n","ari_images = ari_path.glob('*.jpg')\n","can_images = can_path.glob('*.jpg')\n","cas_images = cas_path.glob('*.jpg')\n","cyg_images = cyg_path.glob('*.jpg')\n","pis_images = pis_path.glob('*.jpg')\n","sco_images = sco_path.glob('*.jpg')\n","umi_images = umi_path.glob('*.jpg')\n","tau_images = tau_path.glob('*.jpg')\n","\n","\n","\n","# images_list = [aqu_images, ari_images, can_images, cas_images, cyg_images, pis_images, sco_images, tau_images, umi_images]\n","images_list = [aqu_images, ari_images, can_images, cas_images, sco_images]\n","\n","\n","def make_csv_with_image_labels(images_list, labels_list):\n","    df = []\n","    for i in range(len(images_list)):\n","      for image in images_list[i]:\n","        df.append((image, i)) # adding each image of each class in dataframe df with corresponding class label 0, 1, 2, 3, 4\n","    df = pd.DataFrame(df, columns=[\"image_path\", \"label\"], index = None) # converting into dataframe \n","    df = df.sample(frac = 1).reset_index(drop=True) \n","    return df  \n","\n","train_csv = make_csv_with_image_labels(images_list, input_num) #outputs a dataframe with the image path of every image in classes 0 to 4 as well as their class number\n","train_csv.head()\n","#train_csv.iloc[0]['image_path'] #example of path stored\n","\n","lengths = np.empty(len(input_list))\n","for num in input_num:\n","  lengths[num] = len(train_csv[\"label\"][train_csv.label == num])\n","  print(\"num of\", input_list[num], \"samples:\", lengths[num])\n","\n","plt.pie(lengths, labels=input_list, shadow=True) \n","plt.show()\n","\n","X_train = [] #converting images to numpy arrays\n","for i in train_csv['image_path']:\n","  img = image.load_img(i, target_size=(400, 400), color_mode='rgb')\n","  img = img.resize((32,32))\n","  img = np.asarray(img)\n","  img = img/255\n","  X_train.append(img)\n","X_train = np.array(X_train)\n","\n","#labels \n","y_train = []\n","\n","for i in train_csv['label']:\n","  y_train.append(i)\n","\n","y_train = np.array(y_train)\n","\n","\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["num of Aquarius samples: 64.0\n","num of Aries samples: 65.0\n","num of Cancer samples: 140.0\n","num of Cassiopeia samples: 93.0\n","num of Scorpius samples: 80.0\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{}}]},{"cell_type":"code","metadata":{"id":"tq_0U70GrFri"},"source":["#Building the CNN\n","\n","cnn = Sequential([\n","    layers.Conv2D(filters=32, kernel_size=(3, 3), activation='relu', input_shape=(32, 32, 3)),\n","    layers.MaxPooling2D((2, 2)),\n","    \n","    layers.Conv2D(filters=64, kernel_size=(3, 3), activation='relu'),\n","    layers.MaxPooling2D((2, 2)),\n","    \n","    layers.Flatten(),\n","    layers.Dense(64, activation='relu'),\n","    layers.Dense(5, activation='softmax')\n","])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"5hb3hLrZrThO"},"source":["cnn.compile(optimizer='adam',\n","              loss='sparse_categorical_crossentropy',\n","              metrics=['accuracy'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BxsBNkzzrcPb","executionInfo":{"status":"ok","timestamp":1636143615681,"user_tz":240,"elapsed":10368,"user":{"displayName":"Fardin Abdullah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghj31m9krKn8PVDkg5c0gzfqdB70S0scmgnUcDpGA=s64","userId":"01072415077626113729"}},"outputId":"adc94f67-c846-4fc2-a2b1-277a5815c653"},"source":["cnn.fit(X_train, y_train, epochs=20)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/20\n","14/14 [==============================] - 1s 36ms/step - loss: 1.6189 - accuracy: 0.2534\n","Epoch 2/20\n","14/14 [==============================] - 0s 35ms/step - loss: 1.5640 - accuracy: 0.3167\n","Epoch 3/20\n","14/14 [==============================] - 0s 33ms/step - loss: 1.5699 - accuracy: 0.3167\n","Epoch 4/20\n","14/14 [==============================] - 0s 34ms/step - loss: 1.5607 - accuracy: 0.3167\n","Epoch 5/20\n","14/14 [==============================] - 0s 35ms/step - loss: 1.5531 - accuracy: 0.3167\n","Epoch 6/20\n","14/14 [==============================] - 0s 33ms/step - loss: 1.5231 - accuracy: 0.3167\n","Epoch 7/20\n","14/14 [==============================] - 0s 35ms/step - loss: 1.4574 - accuracy: 0.3281\n","Epoch 8/20\n","14/14 [==============================] - 0s 34ms/step - loss: 1.2929 - accuracy: 0.5430\n","Epoch 9/20\n","14/14 [==============================] - 0s 34ms/step - loss: 1.0253 - accuracy: 0.6833\n","Epoch 10/20\n","14/14 [==============================] - 0s 34ms/step - loss: 0.7158 - accuracy: 0.7783\n","Epoch 11/20\n","14/14 [==============================] - 0s 36ms/step - loss: 0.4854 - accuracy: 0.8824\n","Epoch 12/20\n","14/14 [==============================] - 0s 34ms/step - loss: 0.3494 - accuracy: 0.9276\n","Epoch 13/20\n","14/14 [==============================] - 0s 35ms/step - loss: 0.2633 - accuracy: 0.9186\n","Epoch 14/20\n","14/14 [==============================] - 0s 33ms/step - loss: 0.2046 - accuracy: 0.9412\n","Epoch 15/20\n","14/14 [==============================] - 0s 35ms/step - loss: 0.1602 - accuracy: 0.9615\n","Epoch 16/20\n","14/14 [==============================] - 0s 34ms/step - loss: 0.1251 - accuracy: 0.9683\n","Epoch 17/20\n","14/14 [==============================] - 1s 36ms/step - loss: 0.1225 - accuracy: 0.9638\n","Epoch 18/20\n","14/14 [==============================] - 0s 35ms/step - loss: 0.1288 - accuracy: 0.9683\n","Epoch 19/20\n","14/14 [==============================] - 0s 35ms/step - loss: 0.1169 - accuracy: 0.9615\n","Epoch 20/20\n","14/14 [==============================] - 0s 33ms/step - loss: 0.0947 - accuracy: 0.9819\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f107f4ad410>"]},"metadata":{},"execution_count":94}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":304},"id":"QCAzO-4qrnr1","executionInfo":{"status":"ok","timestamp":1636144131331,"user_tz":240,"elapsed":422,"user":{"displayName":"Fardin Abdullah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghj31m9krKn8PVDkg5c0gzfqdB70S0scmgnUcDpGA=s64","userId":"01072415077626113729"}},"outputId":"6d79bf2d-b3e7-4258-9596-093dd80441bf"},"source":["\n","#PREDICTIONS\n","#Testing with scorpio\n","scr_test = \"/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/Predict/scortest.jpg\"\n","img_scr = image.load_img(scr_test, target_size=(400, 400), color_mode='rgb')\n","\n","plt.imshow(img_scr)\n","img_scr = img_scr.resize((32,32))\n","img_scr = np.asarray(img_scr)\n","img_scr = img_scr/255\n","\n","img_scr = img_scr.reshape(1,32,32,3)\n","print(np.argmax(cnn.predict(img_scr))) #4th index is max so it is a scorpio\n","print(input_list[np.argmax(cnn.predict(img_scr))])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["4\n","Scorpius\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":304},"id":"m09-r5dSyjnC","executionInfo":{"status":"ok","timestamp":1636144167100,"user_tz":240,"elapsed":445,"user":{"displayName":"Fardin Abdullah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghj31m9krKn8PVDkg5c0gzfqdB70S0scmgnUcDpGA=s64","userId":"01072415077626113729"}},"outputId":"972180a0-3e10-4766-e6dd-083075d6cfac"},"source":["\n","\n","aqu_test = \"/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/Predict/aqutest.jpg\"\n","img_aqu = image.load_img(aqu_test, target_size=(400, 400), color_mode='rgb')\n","\n","pl.imshow(img_aqu)\n","img_aqu = img_aqu.resize((32,32))\n","img_aqu= np.asarray(img_aqu)\n","img_aqu = img_aqu/255\n","img_aqu = img_aqu.reshape(1,32,32,3)\n","print(np.argmax(cnn.predict(img_aqu))) #0th index is max so it is Aquarius\n","\n","print(input_list[np.argmax(cnn.predict(img_aqu))])\n","\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","Aquarius\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":483},"id":"EXID7vqw7uzr","executionInfo":{"status":"error","timestamp":1636146619802,"user_tz":240,"elapsed":606,"user":{"displayName":"Nicholas Foisy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00047853568347922974"}},"outputId":"b5c20d14-ac7c-46dd-d9c5-c29b0b3314d3"},"source":["ari_test = \"/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/Predict/ariestest.jpg\"\n","img_ari = image.load_img(ari_test, target_size=(400, 400), color_mode='rgb')\n","\n","pl.imshow(img_ari)\n","img_ari = img_ari.resize((32,32))\n","img_ari= np.asarray(img_ari)\n","img_ari = img_ari/255\n","img_ari = img_ari.reshape(1,32,32,3)\n","print(np.argmax(cnn.predict(img_ari))) #0th index is max so it is Aquarius\n","\n","print(input_list[np.argmax(cnn.predict(img_ari))])"],"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-133-0bafe868a45e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mimg_ari\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mimg_ari\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0;36m255\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0mimg_ari\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mimg_ari\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreshape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m32\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m32\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 9\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcnn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg_ari\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m#0th index is max so it is Aquarius\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput_list\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcnn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg_ari\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'cnn' is not defined"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":231},"id":"Pj0R-vdi9ye0","executionInfo":{"status":"error","timestamp":1636147119762,"user_tz":240,"elapsed":211,"user":{"displayName":"Nicholas Foisy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00047853568347922974"}},"outputId":"9dcc63a2-1090-4786-9106-1708651fb134"},"source":["ari_test = \"/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/Predict/cancertest.jpg\"\n","img_can = image.load_img(can_test, target_size=(400, 400), color_mode='rgb')\n","\n","pl.imshow(img_can)\n","img_can = img_can.resize((32,32))\n","img_can= np.asarray(img_can)\n","img_can = img_can/255\n","img_can = img_can.reshape(1,32,32,3)\n","print(np.argmax(cnn.predict(img_can))) #0th index is max so it is Aquarius\n","\n","print(input_list[np.argmax(cnn.predict(img_can))])"],"execution_count":1,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-56a254eb0762>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mari_test\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/Predict/cancertest.jpg\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mimg_can\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mimage\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload_img\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcan_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtarget_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m400\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m400\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolor_mode\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'rgb'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mpl\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg_can\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mimg_can\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mimg_can\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mresize\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m32\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m32\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'image' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":304},"id":"sFqN7D1Vyswl","executionInfo":{"status":"ok","timestamp":1636144187674,"user_tz":240,"elapsed":424,"user":{"displayName":"Fardin Abdullah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghj31m9krKn8PVDkg5c0gzfqdB70S0scmgnUcDpGA=s64","userId":"01072415077626113729"}},"outputId":"66a00a7b-e8f4-4498-e6d3-bfbd94d36a7f"},"source":["\n","cass_test = \"/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/Predict/casstest2.jpg\"\n","img_cass = image.load_img(cass_test, target_size=(400, 400), color_mode='rgb')\n","\n","plt.imshow(img_cass)\n","img_cass = img_cass.resize((32,32))\n","img_cass= np.asarray(img_cass)\n","img_cass = img_cass/255\n","img_cass = img_cass.reshape(1,32,32,3)\n","print(np.argmax(cnn.predict(img_cass))) #3rh index is max so it is cassiopeia\n","\n","print(input_list[np.argmax(cnn.predict(img_cass))])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3\n","Cassiopeia\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"mXdTOkhsyxcN"},"source":["Try with Test set and find scores/accuracy using sklearn?"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ziKeCnxJJWJW","executionInfo":{"status":"ok","timestamp":1636133994752,"user_tz":240,"elapsed":145,"user":{"displayName":"Nicholas Foisy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00047853568347922974"}},"outputId":"3507b7b2-0db4-4d5f-d459-5fa78d5eda85"},"source":["def get_train_generator(train_dir, batch_size=16, target_size=(400, 400)):  \n","    ''' \n","    Function for preparing training data\n","    '''\n","    train_datagen = ImageDataGenerator(rescale = 1./255., # normalizing the image \n","                                   rotation_range = 30,\n","                                   width_shift_range = 0.2,\n","                                   height_shift_range = 0.2,\n","                                   shear_range = 0.2,\n","                                   zoom_range = 0.4,\n","                                   horizontal_flip = True) \n","    train_generator = train_datagen.flow_from_directory(train_dir, \n","                                                    batch_size = batch_size, \n","                              \n","                                                    class_mode = 'categorical', \n","                                                    target_size = target_size)   \n","    return train_generator  \n","train_generator = get_train_generator(train_folder_path)\n","\n","\n","#should class mode be binary?"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 444 images belonging to 5 classes.\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Lfqxll9ELbtB","executionInfo":{"status":"ok","timestamp":1636133994905,"user_tz":240,"elapsed":155,"user":{"displayName":"Nicholas Foisy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00047853568347922974"}},"outputId":"4ae0f823-cd3b-41c1-bc79-2a5d7098202a"},"source":["def get_testgenerator(test_dir,batch_size=64, target_size=(400,400)): \n","    ''' \n","    Function for preparing testing data\n","    '''\n","    test_datagen = ImageDataGenerator( rescale = 1.0/255. )\n","    test_generator  =  test_datagen.flow_from_directory(test_dir, \n","                                                          batch_size  = batch_size, \n","                                                          color_mode='rgb',\n","                                                          class_mode  = 'categorical', \n","                                                          target_size = target_size) \n","    return test_generator\n","test_generator = get_testgenerator(test_path)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 50 images belonging to 5 classes.\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8EA6zMRpLPvy","executionInfo":{"status":"ok","timestamp":1636133995288,"user_tz":240,"elapsed":384,"user":{"displayName":"Nicholas Foisy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00047853568347922974"}},"outputId":"4c8553c7-c519-469f-9315-b826b98d5092"},"source":["#model = tf.keras.Sequential([\n"," #   layers.Conv2D(64, (3,3), strides=(2,2),padding='same',input_shape= (400,400,3),activation = 'relu'), \n","  #  layers.MaxPool2D(2,2), \n","   # layers.Conv2D(128, (3,3), strides=(2,2),padding='same',activation = 'relu'),\n","    #layers.MaxPool2D(2,2), \n","    #layers.Conv2D(256, (3,3), strides=(2,2),padding='same',activation = 'relu'), \n","    #layers.MaxPool2D(2,2),  \n","    #layers.Flatten(), \n","    #layers.Dense(158, activation ='relu'), \n","    #layers.Dense(256, activation = 'relu'), \n","    #layers.Dense(128, activation = 'relu'), \n","    #layers.Dense(1, activation = 'sigmoid'), \n","#]) \n","#model.summary()\n","\n","\n","\n","model = Sequential([\n","    Conv2D(16, (3, 3), activation='relu', input_shape=(400, 400, 3)), MaxPooling2D(2, 2),\n","    Conv2D(32, (3, 3), activation='relu'), MaxPooling2D(2, 2),\n","    Conv2D(64, (3, 3), activation='relu'),\n","    Conv2D(64, (3, 3), activation='relu'),\n","    MaxPooling2D(2, 2),\n","    Conv2D(128, (3, 3), activation='relu'),\n","    Conv2D(128, (3, 3), activation='relu'),\n","    MaxPooling2D(2, 2),\n","    Conv2D(256, (3, 3), activation='relu'),\n","    Conv2D(256, (3, 3), activation='relu'),\n","    Conv2D(256, (3, 3), activation='relu'),\n","    MaxPooling2D(2, 2),\n","    Flatten(),\n","    Dense(512, activation='relu'),\n","    Dense(512, activation='relu'),\n","    Dense(5, activation='softmax')\n","])\n","model.summary()\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_7\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv2d_21 (Conv2D)           (None, 398, 398, 16)      448       \n","_________________________________________________________________\n","max_pooling2d_21 (MaxPooling (None, 199, 199, 16)      0         \n","_________________________________________________________________\n","conv2d_22 (Conv2D)           (None, 197, 197, 32)      4640      \n","_________________________________________________________________\n","max_pooling2d_22 (MaxPooling (None, 98, 98, 32)        0         \n","_________________________________________________________________\n","conv2d_23 (Conv2D)           (None, 96, 96, 64)        18496     \n","_________________________________________________________________\n","conv2d_24 (Conv2D)           (None, 94, 94, 64)        36928     \n","_________________________________________________________________\n","max_pooling2d_23 (MaxPooling (None, 47, 47, 64)        0         \n","_________________________________________________________________\n","conv2d_25 (Conv2D)           (None, 45, 45, 128)       73856     \n","_________________________________________________________________\n","conv2d_26 (Conv2D)           (None, 43, 43, 128)       147584    \n","_________________________________________________________________\n","max_pooling2d_24 (MaxPooling (None, 21, 21, 128)       0         \n","_________________________________________________________________\n","conv2d_27 (Conv2D)           (None, 19, 19, 256)       295168    \n","_________________________________________________________________\n","conv2d_28 (Conv2D)           (None, 17, 17, 256)       590080    \n","_________________________________________________________________\n","conv2d_29 (Conv2D)           (None, 15, 15, 256)       590080    \n","_________________________________________________________________\n","max_pooling2d_25 (MaxPooling (None, 7, 7, 256)         0         \n","_________________________________________________________________\n","flatten_7 (Flatten)          (None, 12544)             0         \n","_________________________________________________________________\n","dense_28 (Dense)             (None, 512)               6423040   \n","_________________________________________________________________\n","dense_29 (Dense)             (None, 512)               262656    \n","_________________________________________________________________\n","dense_30 (Dense)             (None, 5)                 2565      \n","=================================================================\n","Total params: 8,445,541\n","Trainable params: 8,445,541\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","metadata":{"id":"bqPA54PGLxSX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1636139238290,"user_tz":240,"elapsed":5243004,"user":{"displayName":"Nicholas Foisy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00047853568347922974"}},"outputId":"f9153fad-97dd-4d7b-be3f-a32f3150667c"},"source":["#model.compile(optimizer=RMSprop(learning_rate=0.001), loss='binary_crossentropy', metrics=['acc'])\n","#history = model.fit(train_generator,\n"," #                             epochs=15,\n","  #                            verbose=1)\n","#Fardin: Started training it but realised ursa minor was transparent so will train later after gathering more data\n","#Since its multiclass, do we need to change parameters?\n","\n","\n","model.compile(optimizer='Adam', \n","              loss='categorical_crossentropy', \n","              metrics =['accuracy'])\n","\n","history = model.fit_generator(train_generator,\n","                              epochs=30,\n","                              verbose=1, validation_data=test_generator)\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/keras/engine/training.py:1972: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n","  warnings.warn('`Model.fit_generator` is deprecated and '\n"]},{"output_type":"stream","name":"stdout","text":["Epoch 1/30\n","28/28 [==============================] - 155s 5s/step - loss: 1.7654 - accuracy: 0.2838 - val_loss: 1.6150 - val_accuracy: 0.2000\n","Epoch 2/30\n","28/28 [==============================] - 144s 5s/step - loss: 1.5776 - accuracy: 0.3153 - val_loss: 1.6697 - val_accuracy: 0.2000\n","Epoch 3/30\n","28/28 [==============================] - 144s 5s/step - loss: 1.5767 - accuracy: 0.3153 - val_loss: 1.6604 - val_accuracy: 0.2000\n","Epoch 4/30\n","28/28 [==============================] - 145s 5s/step - loss: 1.5694 - accuracy: 0.3153 - val_loss: 1.6523 - val_accuracy: 0.2000\n","Epoch 5/30\n","28/28 [==============================] - 144s 5s/step - loss: 1.5757 - accuracy: 0.3153 - val_loss: 1.6436 - val_accuracy: 0.2000\n","Epoch 6/30\n","28/28 [==============================] - 144s 5s/step - loss: 1.5687 - accuracy: 0.3153 - val_loss: 1.6457 - val_accuracy: 0.2000\n","Epoch 7/30\n","28/28 [==============================] - 144s 5s/step - loss: 1.5690 - accuracy: 0.3153 - val_loss: 1.6387 - val_accuracy: 0.2000\n","Epoch 8/30\n","28/28 [==============================] - 143s 5s/step - loss: 1.5728 - accuracy: 0.3153 - val_loss: 1.6325 - val_accuracy: 0.2000\n","Epoch 9/30\n","28/28 [==============================] - 143s 5s/step - loss: 1.5697 - accuracy: 0.3153 - val_loss: 1.6461 - val_accuracy: 0.2000\n","Epoch 10/30\n","28/28 [==============================] - 144s 5s/step - loss: 1.5717 - accuracy: 0.3153 - val_loss: 1.6270 - val_accuracy: 0.2000\n","Epoch 11/30\n","28/28 [==============================] - 143s 5s/step - loss: 1.5707 - accuracy: 0.3153 - val_loss: 1.6405 - val_accuracy: 0.2000\n","Epoch 12/30\n","28/28 [==============================] - 143s 5s/step - loss: 1.5693 - accuracy: 0.3153 - val_loss: 1.6506 - val_accuracy: 0.2000\n","Epoch 13/30\n","28/28 [==============================] - 142s 5s/step - loss: 1.5689 - accuracy: 0.3153 - val_loss: 1.6514 - val_accuracy: 0.2000\n","Epoch 14/30\n","28/28 [==============================] - 143s 5s/step - loss: 1.5677 - accuracy: 0.3153 - val_loss: 1.6466 - val_accuracy: 0.2000\n","Epoch 15/30\n","28/28 [==============================] - 145s 5s/step - loss: 1.5698 - accuracy: 0.3153 - val_loss: 1.6471 - val_accuracy: 0.2000\n","Epoch 16/30\n","28/28 [==============================] - 143s 5s/step - loss: 1.5678 - accuracy: 0.3153 - val_loss: 1.6380 - val_accuracy: 0.2000\n","Epoch 17/30\n","28/28 [==============================] - 143s 5s/step - loss: 1.5666 - accuracy: 0.3153 - val_loss: 1.6470 - val_accuracy: 0.2000\n","Epoch 18/30\n","28/28 [==============================] - 144s 5s/step - loss: 1.5660 - accuracy: 0.3153 - val_loss: 1.6563 - val_accuracy: 0.2000\n","Epoch 19/30\n","28/28 [==============================] - 143s 5s/step - loss: 1.5669 - accuracy: 0.3153 - val_loss: 1.6482 - val_accuracy: 0.2000\n","Epoch 20/30\n","28/28 [==============================] - 144s 5s/step - loss: 1.5681 - accuracy: 0.3153 - val_loss: 1.6457 - val_accuracy: 0.2000\n","Epoch 21/30\n","28/28 [==============================] - 143s 5s/step - loss: 1.5681 - accuracy: 0.3153 - val_loss: 1.6434 - val_accuracy: 0.2000\n","Epoch 22/30\n","28/28 [==============================] - 143s 5s/step - loss: 1.5653 - accuracy: 0.3153 - val_loss: 1.6522 - val_accuracy: 0.2000\n","Epoch 23/30\n","28/28 [==============================] - 143s 5s/step - loss: 1.5665 - accuracy: 0.3153 - val_loss: 1.6572 - val_accuracy: 0.2000\n","Epoch 24/30\n","28/28 [==============================] - 145s 5s/step - loss: 1.5671 - accuracy: 0.3153 - val_loss: 1.6481 - val_accuracy: 0.2000\n","Epoch 25/30\n","28/28 [==============================] - 144s 5s/step - loss: 1.5660 - accuracy: 0.3153 - val_loss: 1.6530 - val_accuracy: 0.2000\n","Epoch 26/30\n","28/28 [==============================] - 143s 5s/step - loss: 1.5659 - accuracy: 0.3153 - val_loss: 1.6500 - val_accuracy: 0.2000\n","Epoch 27/30\n","28/28 [==============================] - 143s 5s/step - loss: 1.5668 - accuracy: 0.3153 - val_loss: 1.6484 - val_accuracy: 0.2000\n","Epoch 28/30\n","28/28 [==============================] - 145s 5s/step - loss: 1.5674 - accuracy: 0.3153 - val_loss: 1.6514 - val_accuracy: 0.2000\n","Epoch 29/30\n","28/28 [==============================] - 144s 5s/step - loss: 1.5661 - accuracy: 0.3153 - val_loss: 1.6452 - val_accuracy: 0.2000\n","Epoch 30/30\n","28/28 [==============================] - 142s 5s/step - loss: 1.5668 - accuracy: 0.3153 - val_loss: 1.6518 - val_accuracy: 0.2000\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":545},"id":"1pdCPAnEMjD_","executionInfo":{"status":"ok","timestamp":1636139724571,"user_tz":240,"elapsed":1193,"user":{"displayName":"Nicholas Foisy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00047853568347922974"}},"outputId":"bdbcb23b-c7d5-433f-9f78-639da593093a"},"source":["import matplotlib.image  as mpimg\n","import matplotlib.pyplot as plt\n","acc=history.history['accuracy']\n","val_acc=history.history['val_accuracy']\n","loss=history.history['loss']\n","val_loss=history.history['val_loss']\n","epochs=range(len(acc))\n","plt.plot(epochs, acc, 'r', \"Training Accuracy\")\n","plt.plot(epochs, val_acc, 'b', \"Validation Accuracy\")\n","plt.title('Training and validation accuracy')\n","plt.figure()\n","plt.plot(epochs, loss, 'r', \"Training Loss\")\n","plt.plot(epochs, val_loss, 'b', \"Validation Loss\")\n","plt.title('Training and validation loss')\n","\n","model.save('my_model.h5') # saving the trained model \n","\n","new_model = tf.keras.models.load_model('./my_model.h5') # loading the trained model"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"fT-RjbYfNjzX"},"source":["import tensorflow as tf\n","from tensorflow.keras.applications.resnet50 import preprocess_input, decode_predictions\n","from tensorflow.keras.preprocessing import image\n","# Helper libraries\n","import numpy as np\n","import matplotlib.pyplot as pl"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":286},"id":"vrJhqXPtVboI","executionInfo":{"status":"ok","timestamp":1636139733457,"user_tz":240,"elapsed":529,"user":{"displayName":"Nicholas Foisy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00047853568347922974"}},"outputId":"cb2f285d-aee7-4d03-ce48-f95ecf7fbbcb"},"source":["img_path = \"/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/Predict/casstest2.jpg\"\n","img = image.load_img(img_path, target_size=(400, 400), color_mode='rgb')\n","\n","img_array = image.img_to_array(img)\n","img_batch = np.expand_dims(img_array, axis=0)\n","\n","plt.imshow(img)\n","plt.show()\n","\n","\n","prediction1 = new_model.predict([img_batch])\n","print(prediction1)\n","#test after training model"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["[[0.13265115 0.12941062 0.34847295 0.21303402 0.17643122]]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":642},"id":"U2iarpzygUCh","executionInfo":{"status":"error","timestamp":1636140001684,"user_tz":240,"elapsed":864,"user":{"displayName":"Nicholas Foisy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00047853568347922974"}},"outputId":"b99ae343-e8b4-452b-f5a7-04a3645715c7"},"source":["img2_path = \"/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/Predict/aqutest.jpg\"\n","img2 = image.load_img(img2_path, target_size=(400, 400), color_mode='rgb')\n","\n","img2_array = image.img_to_array(img2)\n","img2_batch = np.expand_dims(img2_array, axis=0)\n","\n","plt.imshow(img2)\n","plt.show()\n","\n","\n","prediction2 = new_model.predict([img2_batch])\n","print(prediction2)\n","\n","from keras.utils.np_utils import probas_to_classes\n","\n","# y_classes = y_prob.argmax(axis=-1)\n","# print(y_classes)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["[[0.13191998 0.12888621 0.35198966 0.21128729 0.17591687]]\n"]},{"output_type":"error","ename":"ImportError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mImportError\u001b[0m                               Traceback (most recent call last)","\u001b[0;32m<ipython-input-125-64dab081d07d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprediction2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 14\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mutils\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnp_utils\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mprobas_to_classes\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     15\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m \u001b[0my_classes\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0my_prob\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mImportError\u001b[0m: cannot import name 'probas_to_classes' from 'keras.utils.np_utils' (/usr/local/lib/python3.7/dist-packages/keras/utils/np_utils.py)","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}]},{"cell_type":"code","metadata":{"id":"TuQGY-SUMjIW","colab":{"base_uri":"https://localhost:8080/","height":286},"executionInfo":{"status":"ok","timestamp":1636139756814,"user_tz":240,"elapsed":402,"user":{"displayName":"Nicholas Foisy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00047853568347922974"}},"outputId":"8d774405-385f-4962-88c8-28fbda42b814"},"source":["img4_path = \"/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Model_Data/Predict/scortest.jpg\"\n","img4 = image.load_img(img4_path, target_size=(400, 400), color_mode='rgb')\n","\n","img4_array = image.img_to_array(img4)\n","img4_batch = np.expand_dims(img4_array, axis=0)\n","\n","plt.imshow(img4)\n","plt.show()\n","\n","\n","prediction4 = new_model.predict([img4_batch])\n","print(prediction4)\n","#Will test after training model"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["[[0.1367555  0.13442953 0.34381068 0.20767258 0.17733161]]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":286},"id":"s4tqj61bj0k6","executionInfo":{"status":"ok","timestamp":1636140399453,"user_tz":240,"elapsed":584,"user":{"displayName":"Nicholas Foisy","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"00047853568347922974"}},"outputId":"f4d3957c-29d7-4ea4-ad01-5ae388487e82"},"source":["\n","img4_path = \"/content/gdrive/MyDrive/ConstellationClassifier/Dataset/Junk/whitetest.jpg\"\n","img4 = image.load_img(img4_path, target_size=(400, 400), color_mode='rgb')\n","\n","img4_array = image.img_to_array(img4)\n","img4_batch = np.expand_dims(img4_array, axis=0)\n","\n","plt.imshow(img4)\n","plt.show()\n","\n","\n","prediction4 = new_model.predict([img4_batch])\n","print(prediction4)\n","#Will test after training model"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["[[0.14303453 0.14062598 0.33095592 0.20561889 0.1797647 ]]\n"]}]}]}